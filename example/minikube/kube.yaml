---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zenvoy-xds
  namespace: projectcontour
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: zenvoy-xds
rules:
  - apiGroups: [ "" ]
    resources: [ "endpoints" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "apps" ]
    resources: [ "deployments/scale" ]
    verbs: [ "get", "update" ]
  - apiGroups: [ "projectcontour.io" ]
    resources: [ "httpproxies" ]
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zenvoy-xds
subjects:
  - kind: ServiceAccount
    name: zenvoy-xds
    namespace: projectcontour
roleRef:
  kind: ClusterRole
  name: zenvoy-xds
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zenvoy-proxy
  namespace: projectcontour
  labels:
    name: zenvoy-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      name: zenvoy-proxy
  template:
    metadata:
      labels:
        name: zenvoy-proxy
    spec:
      containers:
        - name: proxy
          image: gcr.io/dcard-staging/zenvoy-proxy:latest
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add: [ "NET_ADMIN" ]
          env:
            - name: XDS_ADDR
              value: zenvoy-xds:18000
          ports:
            - containerPort: 18001
        - name: envoy
          image: envoyproxy/envoy:v1.16.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 10000
            - containerPort: 10001
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
      volumes:
        - name: envoy-config
          configMap:
            name: zenvoy-envoy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zenvoy-xds
  namespace: projectcontour
  labels:
    name: zenvoy-xds
spec:
  replicas: 1
  selector:
    matchLabels:
      name: zenvoy-xds
  template:
    metadata:
      labels:
        name: zenvoy-xds
    spec:
      serviceAccountName: zenvoy-xds
      containers:
        - name: xds
          image: gcr.io/dcard-staging/zenvoy-xds:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 18000
---
apiVersion: v1
kind: Service
metadata:
  name: zenvoy-proxy
  namespace: projectcontour
spec:
  type: ClusterIP
  selector:
    name: zenvoy-proxy
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 10000
    - protocol: TCP
      name: admin
      port: 10001
      targetPort: 10001

---
apiVersion: v1
kind: Service
metadata:
  name: zenvoy-xds
  namespace: projectcontour
spec:
  type: ClusterIP
  selector:
    name: zenvoy-xds
  ports:
    - protocol: TCP
      name: tcp
      port: 18000
      targetPort: 18000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zenvoy-envoy
  namespace: projectcontour
data:
  envoy.yaml: |
    admin:
      access_log_path: /dev/null
      address:
        socket_address: { address: 0.0.0.0, port_value: 10001 }

    dynamic_resources:
      ads_config:
        api_type: GRPC
        transport_api_version: V3
        grpc_services:
          envoy_grpc:
            cluster_name: xds_cluster
      lds_config:
        resource_api_version: V3
        ads: {}
      cds_config:
        resource_api_version: V3
        ads: {}

    stats_sinks:
      - name: monitor
        typed_config:
          "@type": type.googleapis.com/envoy.config.metrics.v3.MetricsServiceConfig
          transport_api_version: V3
          grpc_service:
            envoy_grpc:
              cluster_name: xds_cluster

    stats_config:

    node:
      cluster: zenvoy-cluster
      id: zenvoy

    static_resources:
      clusters:
        - name: xds_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          http2_protocol_options:
            # Configure an HTTP/2 keep-alive to detect connection issues and reconnect
            # to the admin server if the connection is no longer responsive.
            connection_keepalive:
              interval: 30s
              timeout: 5s
          load_assignment:
            cluster_name: xds_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: zenvoy-xds
                          port_value: 18000
